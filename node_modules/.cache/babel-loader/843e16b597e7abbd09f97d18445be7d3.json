{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nexport var serializeFetchParameter = function serializeFetchParameter(p, label) {\n  var serialized;\n\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(23) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n    parseError.parseError = e;\n    throw parseError;\n  }\n\n  return serialized;\n};","map":{"version":3,"sources":["../../../src/link/http/serializeFetchParameter.ts"],"names":[],"mappings":"AAAA,SAAS,cAAT,QAA+B,cAA/B;AAMA,OAAO,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,CAAC,CAAD,EAAS,KAAT,EAAsB;EAC3D,IAAI,UAAJ;;EACA,IAAI;IACF,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,CAAf,CAAb;EACD,CAFD,CAEE,OAAO,CAAP,EAAU;IACV,IAAM,UAAU,GAAG,OAAI,CAAA,GAAJ,CAAI,QAAJ,KACjB,YADiB,GACjB,IAAA,cAAA,CAAgC,EAAhC,CADiB,GACe,IAAA,cAAA,CAA0B,6BACtC,KADsC,GACtC,wBADsC,GACtC,CAAA,CAAA,OADY,CADlC;IAGA,UAAU,CAAC,UAAX,GAAwB,CAAxB;IACA,MAAM,UAAN;EACD;;EACD,OAAO,UAAP;AACD,CAZM","sourcesContent":["import { InvariantError } from 'ts-invariant';\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}